package hr.JollyBringer.JollyBringer.service;


import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.util.Assert;

import java.util.List;
import java.util.Optional;

@Service
public class StudentServiceJpa implements StudentService {

  private static final String JMBAG_FORMAT = "[0-9]{10}";

  @Autowired
  private StudentRepository studentRepo;

  @Override
  public List<Student> listAll() {
    return studentRepo.findAll();
  }

  @Override
  public Optional<Student> findById(long studentId) {
    return studentRepo.findById(studentId);
  }

  @Override
  public Optional<Student> findByJmbag(String jmbag) {
    Assert.notNull(jmbag, "JMBAG must be given");
    return studentRepo.findByJmbag(jmbag);
  }

  @Override
  public Student fetch(long studentId) {
    return findById(studentId).orElseThrow(
      () -> new EntityMissingException(Student.class, studentId)
    );
  }

  @Override
  public Student createStudent(Student student) {
    validate(student);
    Assert.isNull(student.getId(),
      "Student ID must be null, not: " + student.getId()
    );
    if (studentRepo.countByJmbag(student.getJmbag()) > 0)
      throw new RequestDeniedException(
        "Student with JMBAG " + student.getJmbag() + " already exists"
      );
    return studentRepo.save(student);
  }

  @Override
  public Student updateStudent(Student student) {
    validate(student);
    Long studentId = student.getId();
    if (!studentRepo.existsById(studentId))
      throw new EntityMissingException(Student.class, studentId);
    if (studentRepo.existsByJmbagAndIdNot(student.getJmbag(), studentId))
      throw new RequestDeniedException(
        "Student with JMBAG " + student.getJmbag() + " already exists"
      );
    return studentRepo.save(student);
  }

  @Override
  public Student deleteStudent(long studentId) {
    Student student = fetch(studentId);
    studentRepo.delete(student);
    return student;
  }

  private void validate(Student student) {
    Assert.notNull(student, "Student object must be given");
    String jmbag = student.getJmbag();
    Assert.hasText(jmbag, "JMBAG must be given");
    Assert.isTrue(jmbag.matches(JMBAG_FORMAT),
      "JMBAG must have 10 digits, not '" + jmbag + "'");
  }
}
