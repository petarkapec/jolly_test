{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\korisnik\\\\Documents\\\\fakultet\\\\PROGI\\\\JollyBringer\\\\IzvorniKod\\\\jollybringer-frontend\\\\src\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom'; // Import useHistory for navigation\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginComponent = () => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const history = useHistory(); // Initialize history for navigation\n\n  const handleLogin = async e => {\n    e.preventDefault(); // Prevent default form submission\n\n    // Make the REST API call\n    try {\n      const response = await fetch('/api/login', {\n        // Adjust the endpoint accordingly\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username,\n          password\n        })\n      });\n      if (response.ok) {\n        // If login is successful, redirect to the dashboard\n        history.push('/dashboard'); // Use history to navigate to the dashboard\n      } else {\n        // Handle login failure (e.g., show an error message)\n        const errorData = await response.json();\n        alert(errorData.message || 'Login failed. Please try again.');\n      }\n    } catch (error) {\n      console.error('Error during login:', error);\n      alert('An error occurred. Please try again later.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: \"Jolly Bringer Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleLogin,\n      className: \"login-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Username\",\n        value: username,\n        onChange: e => setUsername(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n_s(LoginComponent, \"tv8EzuaX//5WlTHeteRkd5b7x4w=\", false, function () {\n  return [useHistory];\n});\n_c = LoginComponent;\nexport default LoginComponent;\nvar _c;\n$RefreshReg$(_c, \"LoginComponent\");","map":{"version":3,"names":["React","useState","useHistory","jsxDEV","_jsxDEV","LoginComponent","_s","username","setUsername","password","setPassword","history","handleLogin","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","ok","push","errorData","json","alert","message","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","required","_c","$RefreshReg$"],"sources":["C:/Users/korisnik/Documents/fakultet/PROGI/JollyBringer/IzvorniKod/jollybringer-frontend/src/Login.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom'; // Import useHistory for navigation\r\n\r\nconst LoginComponent = () => {\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const history = useHistory(); // Initialize history for navigation\r\n\r\n    const handleLogin = async (e) => {\r\n        e.preventDefault(); // Prevent default form submission\r\n        \r\n        // Make the REST API call\r\n        try {\r\n            const response = await fetch('/api/login', { // Adjust the endpoint accordingly\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({ username, password }),\r\n            });\r\n\r\n            if (response.ok) {\r\n                // If login is successful, redirect to the dashboard\r\n                history.push('/dashboard'); // Use history to navigate to the dashboard\r\n            } else {\r\n                // Handle login failure (e.g., show an error message)\r\n                const errorData = await response.json();\r\n                alert(errorData.message || 'Login failed. Please try again.');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error during login:', error);\r\n            alert('An error occurred. Please try again later.');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"login-container\">\r\n            <h1 className=\"title\">Jolly Bringer Login</h1>\r\n            <form onSubmit={handleLogin} className=\"login-form\">\r\n                <input \r\n                    type=\"text\" \r\n                    placeholder=\"Username\" \r\n                    value={username}\r\n                    onChange={(e) => setUsername(e.target.value)}\r\n                    required \r\n                />\r\n                <input \r\n                    type=\"password\" \r\n                    placeholder=\"Password\" \r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                    required \r\n                />\r\n                <button type=\"submit\">Login</button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LoginComponent;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}