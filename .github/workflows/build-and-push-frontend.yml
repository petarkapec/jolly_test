name: Build and Push Frontend Image

on:
  push:
    branches:
      - master
    paths:
      - 'frontend/**'      # Trigger only on changes in the /frontend directory
  workflow_dispatch:

jobs:
  build-frontend:
    name: Build Frontend
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'  # Koristi verziju Node.js koja je kompatibilna sa tvojim projektom

      - name: Cache npm dependencies
        uses: actions/cache@v3
        with:
          path: frontend/node_modules  # Keširaj npm zavisnosti
          key: ${{ runner.os }}-npm-${{ hashFiles('frontend/package-lock.json') }}  # Ključ baziran na hash-u `package-lock.json`
          restore-keys: |
            ${{ runner.os }}-npm-

      - name: Install dependencies
        run: npm install
        working-directory: frontend  # Promeni radni direktorijum na `frontend`
        
      - name: Install Vite manually
        run: npm install vite --save-dev  # Instaliraj Vite ako nije već instaliran
        working-directory: frontend  # Promeni radni direktorijum na `frontend`

      - name: Set executable permissions for Vite
        run: chmod +x node_modules/.bin/vite
        working-directory: frontend


      - name: Build frontend
        run: npm run build  # Buildanje aplikacije
        working-directory: frontend  # Promeni radni direktorijum na `frontend`

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push frontend image
        uses: docker/build-push-action@v6
        with:
          context: ./frontend
          push: true
          tags: ghcr.io/${{ github.repository }}/frontend:latest

      - name: Trigger release
        if: ${{ env.FRONTEND_DEPLOY_HOOK }}
        run: curl ${{ env.FRONTEND_DEPLOY_HOOK }}
